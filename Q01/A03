# q04_oop_polymorphism.py

# TODO:
# Implement print_details(obj) that works for both Book and EBook (duck typing)
# Create a list [Book(...), EBook(...), ...] and iterate to print details.

class Book:
    def __init__(self, title: str, author: str, price: float):
        self.title = title
        self.author = author
        self.price = price

    def get_details(self) -> str:
        return f"Title: {self.title}, Author: {self.author}, Price: {self.price}"


class EBook(Book):
    def __init__(self, title: str, author: str, price: float, file_size: float):
        super().__init__(title, author, price)
        self.file_size = file_size

    def get_details(self) -> str:
        return f"Title: {self.title}, Author: {self.author}, Price: {self.price}, File Size: {self.file_size}MB"


def print_details(obj):
    # duck typing: as long as obj has get_details(), it works
    print(obj.get_details())


if __name__ == "__main__":
    # demo
    book1 = Book("Clean Code", "Robert C. Martin", 899.0)
    ebook1 = EBook("Deep Learning", "Ian Goodfellow", 1299.0, 5.5)

    library = [book1, ebook1]

    for item in library:
        print_details(item)
